<template>
    <span :class="classes">
        <component :is="icon" class="-ml-1 mr-1 h-3 w-3" />
        <slot>{{ resolvedLabel }}</slot>
    </span>
</template>

<script setup lang="ts">
import { computed } from 'vue'
import { ternaryMatch } from '@/trilean'

interface Props {
    state: string
    labels?: Record<string, string>
}

const props = withDefaults(defineProps<Props>(), {
    state: 'unknown',
    labels: () => ({
        true: 'Ativo',
        false: 'Bloqueado',
        unknown: 'Em revisÃ£o',
    }),
})

const classes = computed(() => [
    'inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-semibold',
    window.trilean?.ui?.badges?.[props.state] ?? 'bg-slate-200 text-slate-800',
])

const icon = computed(() => window.trilean?.ui?.icons?.[props.state] ?? 'HeroiconsOutlineQuestionMarkCircle')

const resolvedLabel = computed(() => ternaryMatch(props.state, props.labels))
</script>
